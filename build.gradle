plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
    id 'org.jetbrains.dokka' version '1.7.10'
    id 'maven-publish'
    id 'java-library'
    id 'signing'
    id 'jacoco'
}

group = 'dev.roava'
sourceCompatibility = JavaVersion.VERSION_1_8

ext {
    slf4jVersion = '2.0.0'
    junitVersion = '5.9.0'
    jacksonVersion = '2.13.3'
    retrofitVersion = '2.9.0'

    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    implementation "org.slf4j:slf4j-log4j12:$slf4jVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"

    compileOnly 'org.jetbrains.dokka:dokka-base:1.7.10'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'roava'
                description = 'A unique Roblox API wrapper written in Java'
                url = 'https://github.com/RoavaDev/Roava'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://mit-license.org/'
                        distribution = 'repo'
                    }
                }

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/StayBlueee/Roava/issues'
                }

                scm {
                    url = 'https://github.com/RoavaDev/Roava'
                    connection = 'scm:git:git://github.com/RoavaDev/Roava.git'
                    developerConnection = 'scm:git:git://github.com:Roava/Roava.git'
                }

                developers {
                    developer {
                        name = 'Roava Development Team'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def mavenUsername = findProperty('mavenUsername')
            def mavenPassword = findProperty('mavenPassword')

            if (isReleaseVersion) {
                url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
            } else {
                url = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
            }

            if (mavenUsername != null && mavenPassword != null) {
                credentials {
                    username = mavenUsername
                    password = mavenPassword
                }
            }
        }
    }

    def signingKey = findProperty('signingKey')
    def signingPassword = findProperty('signingPassword')

    if (isReleaseVersion && signingKey != null && signingPassword != null) {
        signing {
            useInMemoryPgpKeys(signingKey, signingPassword)

            sign(publishing.publications.mavenJava)
        }
    }
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

tasks.named("dokkaHtml") {
    suppressInheritedMembers.set(true)
}

java {
    withJavadocJar()
    withSourcesJar()
}

test.finalizedBy(jacocoTestReport)