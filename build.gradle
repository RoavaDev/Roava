import org.jetbrains.kotlin.gradle.dsl.jvm.JvmTargetValidationMode
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile

plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'org.jetbrains.dokka' version '2.0.0'
    id 'maven-publish'
    id 'java-library'
    id 'signing'
    id 'jacoco'
}

group = 'dev.roava'

ext {
    slf4jVersion = '2.0.16'
    junitVersion = '5.11.4'
    jacksonVersion = '2.13.4.2'
    retrofitVersion = '2.11.0'

    isReleaseVersion = !project.version.toString().endsWith("SNAPSHOT")
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    implementation "org.slf4j:slf4j-log4j12:$slf4jVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"

    compileOnly 'org.jetbrains.dokka:dokka-base:2.0.0'
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'roava'
                description = 'A unique Roblox API wrapper written in Java'
                url = 'https://github.com/RoavaDev/Roava'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://mit-license.org/'
                        distribution = 'repo'
                    }
                }

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/StayBlueee/Roava/issues'
                }

                scm {
                    url = 'https://github.com/RoavaDev/Roava'
                    connection = 'scm:git:git://github.com/RoavaDev/Roava.git'
                    developerConnection = 'scm:git:git://github.com:Roava/Roava.git'
                }

                developers {
                    developer {
                        name = 'Roava Development Team'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def mavenKey = findProperty('mavenKey')
            url = uri('https://pkg.wtf')

            if (mavenKey != null) {
                credentials(HttpHeaderCredentials) {
                    name = 'x-api-key'
                    value = mavenKey
                }
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }


}

test {
    useJUnitPlatform()
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "11"
    }
}

tasks.withType(KotlinJvmCompile.class).configureEach {
    jvmTargetValidationMode = JvmTargetValidationMode.WARNING
}

dokka {
    suppressInheritedMembers.set(true)
}

java {
    withJavadocJar()
    withSourcesJar()
}

jacocoTestReport() {
    reports {
        xml.required = true
        html.required = true
    }
}

test.finalizedBy(jacocoTestReport)